{:definitions {"stack-workflow.comp.container/render" ["defn" "render" [] ["fn" ["state" "mutate!"] ["div" ["{}"] ["span" ["{}" [":attrs" ["{}" [":inner-text" "|Container"]]]]]]]], "stack-workflow.comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "stack-workflow.core/-main" ["defn" "-main" [] ["enable-console-print!"] ["render-app!"] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"]], "stack-workflow.core/on-jsload" ["defn" "on-jsload" [] ["clear-cache!"] ["render-app!"] ["println" "|code update."]], "stack-workflow.core/store-ref" ["defonce" "store-ref" ["atom" ["{}"]]], "stack-workflow.core/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "stack-workflow.core/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]], "stack-workflow.core/dispatch!" ["defn" "dispatch!" ["op" "op-data"]]}, :namespaces {"stack-workflow.comp.container" ["ns" "stack-workflow.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]]]], "stack-workflow.core" ["ns" "stack-workflow.core" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "stack-workflow.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]]]}, :main-definition nil, :procedures {"stack-workflow.core" [["set!" [".-onload" "js/window"] "-main"]]}}